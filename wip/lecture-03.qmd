---
title: "Lecture 3"
subtitle: Practical Significance of Standard Deviation
format: html
date: 2023-09-05
---

## 2.3 Understanding and Interpreting the Standard Deviation

### Tchebysheff's Theorem

- Given a number _k_ greater than or equal to 1 and a set of _n_ measurements, **at least** $1 - \frac{1}{k^2}$ of the measurements will lie within _k_ standard deviations of their mean.

- k = 1:  0% of measurments
- k = 2: 3/4 of measurements
- k = 3: 8/9 of measurements

Interval is computed with $\mu \pm k\sigma$.

```{r}
library(ggplot2)
g <- glue::glue
```


Dotted lines show interval for k = 2


```{r}
tche_data <- rnorm(n = 1000, 0, 1)
tche_mean <- mean(tche_data)
tche_sd <- sd(tche_data)

tibble::tibble(
    x = tche_data,
    tche_in = abs(x - tche_mean) < 2*tche_sd
) |> 
ggplot(aes(x = x, fill = tche_in)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = c(tche_mean)) +
geom_vline(xintercept = c(tche_mean + c(-2, 2) * tche_sd), linetype = "dotted") +
theme_linedraw() +
theme(legend.position = "none")
```

Actual amount of data contained in data

```{r}
mean(abs(tche_data - tche_mean) < 2*tche_sd)
```


Note that it's much more than the expected 75%


- Given $\bar{x} = 75, s^2 - 100$, create intervals using Tchebysheff's theorem using k = 1.5, 2, 3


- What value of k gives us an interval that contains at least 50% of the measurements.

### Emperical Rule

Another rule works better when data is 'mount shaped'.

- $\mu \pm \sigma$ has about 68 % of measurements
- $\mu \pm 2\sigma$ has about 95 % of measurements
- $\mu \pm 3\sigma$ has about 99.7 % of measurements.

- We will learn more about where these numbers come from when we learn about the normal distribution.


```{r}
#| layout-ncol: 2
sample_frac <- function(x, frac, ...) {
    samp_size <- length(x) * frac
    sample(x, size= round(samp_size), ...)


}
hist2 <- rnorm(n = 10000, mean = 4, sd = 1)
hist(hist2, xlim = c(0, 8), col = "lightyellow", main = "", xlab = "")
hist2_w <- c(
    hist2[hist2 <= 3  | 
        hist2 >=5],
    sample_frac(hist2[hist2 > 3 & 
        hist2 < 5], .1)
) 

hist2_w |> 
    hist(xlim = c(0, 8), col = "lightgreen", main = "", xlab = "")
```


Using the empirical rule how much of the daa is contained in $\mu \pm \sigma$?

First histogram:

```{r}
mean(abs(scale(hist2)) < 1)
```

Second histogram:
```{r}
mean(abs(scale(hist2_w)) < 1)
```

### Example 2.8
 
```{r}
tbl_2_5 <- matrix(
    c(
        26.1, 26.0,14.5,29.3,19.7,
        22.1,21.2,26.6,31.9,25.0,
        15.9,20.8,20.2,17.8,13.3,
        25.6,26.5,15.7,22.1,13.8,
        29,21.3,23.5,22.1,10.2

    ),
    nrow = 5, byrow = TRUE
)

tbl_2_5 |> knitr::kable()

```


Sample mean:
```{r}
(tbl_2_5_mean <- round(mean(tbl_2_5), 1))
```

standard deviation
```{r}
(tbl_2_5_std <- round(sd(tbl_2_5), 1))
```

```{r}
hist(tbl_2_5 |> as.vector())
```

show 1, 2 and 3 intervals of sd from mean and figure out how many datapoints fall in those buckets


```{r}

tibble::tibble(
    k = 1:3,
    intervals = purrr::map_chr(k, 
        ~g("{tbl_2_5_mean - .x*tbl_2_5_std}, {tbl_2_5_mean + .x*tbl_2_5_std}")),
    freq = purrr::map_dbl(k, 
        ~sum(abs(tbl_2_5 - tbl_2_5_mean) < .x*tbl_2_5_std)),
    rel_freq = freq/length(tbl_2_5)

) |> knitr::kable()


```



Calculate Tchebysheff's Interval
Calculate Empirical Rule Intervals as well


### Approximing s using the range

- Most measurments are within two standard deviations of the mean.
- approximate s as range/4


Range for tbl_2_5
```{r}
range(tbl_2_5)
range(tbl_2_5) |> diff()
```


Std using range approximation
```{r}
(range(tbl_2_5) |> diff())/4
```

Actual Std

```{r}
round(sd(tbl_2_5))
```