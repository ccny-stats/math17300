---
title: "Homework Chapter 2"
format: html
---

```{r}
#| include: false
g <- glue::glue
library(ggplot2)
sapply(list.files(here::here('R'), full.names = T), source)
```

`r get_lecture_homework(2)`

## Section 2.1

```{r}
basic_summary <- function(x) {
    list(
        mean = mean(x),
        median = median(x),
        mode = table(x) |> which.max() |> names() |> as.numeric()
    )
}
```
### Question 1

data:

```{r}
(ex_1 <- c(0,5,1,1,3))
```

```{r}


(ex_1_summary <- basic_summary(ex_1))
```

```{r}
ggplot() +
    geom_dotplot(aes(x = ex_1), binwidth = 1) +
    geom_vline(aes(xintercept = ex_1_summary$mean, linetype = "mean")) +
    geom_vline(aes(xintercept = ex_1_summary$median, linetype = "median")) +
    geom_vline(aes(xintercept = ex_1_summary$mode, linetype = "mode")) +
    theme_linedraw() +
    scale_x_continuous(breaks = 0:6) +
    theme(legend.position = "bottom") +
    labs(linetype = "") +
    theme(axis.ticks.y = element_blank(),
    axis.text.y = element_blank())
```

### Question 2


data:

```{r}
(ex_2 <- c(3,2,5,6,4,4,3,5))
```

```{r}
ex_2_summary <- basic_summary(ex_2)
ex_2_summary$mode <- 3:5
ex_2_summary

```

```{r}
ggplot() +
    geom_dotplot(aes(x = ex_2), binwidth = 1) +
    geom_vline(aes(xintercept = ex_2_summary$mean, linetype = "mean")) +
    geom_vline(aes(xintercept = ex_2_summary$median, linetype = "median")) +
    geom_vline(aes(xintercept = ex_2_summary$mode, linetype = "mode")) +
    theme_linedraw() +
    scale_x_continuous(breaks = 0:12) +
    theme(legend.position = "bottom") +
    labs(linetype = "") +
    theme(axis.ticks.y = element_blank(),
    axis.text.y = element_blank())
```

### Question 3

data:

```{r}
(ex_3 <- c(3,5,4,5,10,5,6,9,2,8))
```

```{r}
(ex_3_summary <- basic_summary(ex_3))
```

```{r}
ggplot() +
    geom_dotplot(aes(x = ex_3), binwidth = 1) +
    geom_vline(aes(xintercept = ex_3_summary$mean, linetype = "mean")) +
    geom_vline(aes(xintercept = ex_3_summary$median, linetype = "median")) +
    geom_vline(aes(xintercept = ex_3_summary$mode, linetype = "mode")) +
    theme_linedraw() +
    scale_x_continuous(breaks = 0:12) +
    theme(legend.position = "bottom") +
    labs(linetype = "") +
    theme(axis.ticks.y = element_blank(),
    axis.text.y = element_blank())
```


### Question 9-10

```{r}
data_q9_10 <- c(
    4.5, 3.2, 3.5, 3.9, 3.5, 3.9,
    4.3, 4.8, 3.6, 3.3, 4.3, 4.2,
    3.9, 3.7, 4.3, 4.4, 3.4, 4.2,
    4.4, 4.0, 3.6, 3.5, 3.9, 4.0)
```

#### Q9

```{r}
basic_summary(data_q9_10)[c("mean", "median")]
```

```{r}
hist(data_q9_10)
```

#### Q10

The mean and median are very similar suggesting that the distribution is symmetric.

### Q13

```{r}
data_q_13 <- c(
    .99, 1.92, 1.223, .85, .65, .53, 1.41, 
    1.12, .63, .67, .69, .60, .60, .66
)

basic_summary(data_q_13)[c("mean", "median")]
hist(data_q_13)
```

Data appears to be skewed right (mean > median)

### Q20

The median is recommended because we assume the salaries come from a very skewed distribution (right skewed).


## Section 2.2 and 2.3

`r get_lecture_homework(3)`


### 2.2.1
 
```{r}
 d_221 <- c(2,1,1,3,5)
 d_221
```

Variance: `r round(var(d_221), 2)`

Standard Deviation: `r round(sd(d_221), 2)`

### 2.2.3

```{r}
 d_223 <- c(3,5,4,5,10,5,6,9,2,8)
 d_223
```

Variance: `r round(var(d_223), 2)`

Standard Deviation: `r round(sd(d_223), 2)`


### 2.2.10

```{r}
d_2210 <- c(1.28, 2.39, 1.5, 1.88, 1.51)
d_2210
```

#### a
Range: 

```{r}
d_2210_range <- range(d_2210) |> diff()
```

#### b

Variance

```{r}
var(d_2210) |> round(2)
```

Standard Deviation
```{r}
sd(d_2210) |> round(2)
```

#### c

Range/Standard Deviation = 

```{r}
(d_2210_range/sd(d_2210)) |> round(1)
```

The range is about 2.5 more than the standard deviation. This less than the 4x we saw in the range/sd approximation.

### 2.3.26

```{r}
d_2326 <- c(7,8,7,10,4,8,6,8,9,10,
9,6,4,9,10,9,8,8,7,9,
3,9,5,9,9,8,7,5,8,8,
10,2,7,4,8,5,10,7,7,7,
9,6,8,8,8,7,8,9,6,8,
6,11,9,11,7,7,11,7,9,13,
10,8,8,5,9,9,8,5,9,8
)

```


#### a


```{r}
ggplot() + geom_histogram(aes(x = d_2326), binwidth = 1)

```

#### b

Mean

```{r}
(samp_mu <- mean(d_2326) |> round(2))
```

#### c

Standard Deviation


```{r}
(samp_sd <- sd(d_2326) |> round(2))
```

Calculations are below - compare to the values for Tchebysheff's and Empircal rule that are given in text:

```{r}
tbl_2336_c <- tibble::tibble(
    multiplier = c(1:3),
    lower_interval = samp_mu -multiplier * samp_sd,
    upper_interval = samp_mu + multiplier * samp_sd
)

tbl_2336_c[["actual_contained"]] <- 
sapply(1:nrow(tbl_2336_c), function(.r){
    mean(
        tbl_2336_c$lower_interval[.r] < d_2326 &
        tbl_2336_c$upper_interval[.r] > d_2326
    ) |> scales::percent(accuracy = 1)
})


tbl_2336_c |> knitr::kable()

```